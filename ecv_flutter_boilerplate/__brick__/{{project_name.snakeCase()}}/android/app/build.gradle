plugins {
    id "com.android.application"
    id 'com.google.gms.google-services'
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "org.jetbrains.kotlin.android"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def debugKeystoreProperties = new Properties()
def debugKeystorePropertiesFile = rootProject.file('debugkey.properties')
if (debugKeystorePropertiesFile.exists()) {
    debugKeystoreProperties.load(new FileInputStream(debugKeystorePropertiesFile))
}

def releaseKeystoreProperties = new Properties()
def releaseKeystorePropertiesFile = rootProject.file('releasekey.properties')
if (releaseKeystorePropertiesFile.exists()) {
    releaseKeystoreProperties.load(new FileInputStream(releaseKeystorePropertiesFile))
}


android {
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "{{application_id_android}}"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 34
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        // crash BUG - TODO
        // https://developer.android.com/ndk/guides/abis#gradle
        // https://github.com/flutter/flutter/issues/83596
        ndk { abiFilters 'armeabi-v7a','arm64-v8a', 'x86_64' }
    }

     signingConfigs {
        if (releaseKeystorePropertiesFile.exists()) {
          release {
            keyAlias releaseKeystoreProperties['keyAlias']
            keyPassword releaseKeystoreProperties['keyPassword']
            storeFile file(releaseKeystoreProperties['storeFile'])
            storePassword releaseKeystoreProperties['storePassword']
          }
        }
        
        debug {
            keyAlias debugKeystoreProperties['keyAlias']
            keyPassword debugKeystoreProperties['keyPassword']
            storeFile file(debugKeystoreProperties['storeFile'])
            storePassword debugKeystoreProperties['storePassword']
        }
    }


    buildTypes {  
        if (releaseKeystorePropertiesFile.exists()) {
          release {
            signingConfig signingConfigs.release
            ndk {
                debugSymbolLevel 'SYMBOL_TABLE'
            }
          }
        }

        profile {
            signingConfig signingConfigs.debug
        }
        
        debug {
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "app"
    productFlavors {
        dev {
            flavorDimensions "app"
            resValue "string", "app_name", "{{project_name.titleCase()}} (dev)"
            applicationIdSuffix '.dev'
        }
        qa {
            flavorDimensions "app"
            resValue "string", "app_name", "{{project_name.titleCase()}} (qa)"
            applicationIdSuffix '.qa'
        }
        prod {
            flavorDimensions "app"
            resValue "string", "app_name", "{{project_name.titleCase()}}"
        }
    }
}

flutter {
    source '../..'
}

